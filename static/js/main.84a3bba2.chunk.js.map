{"version":3,"sources":["Footer.js","Header.js","Main.js","App.js","reportWebVitals.js","index.js"],"names":["Footer","props","items","clearCompleted","className","length","onClick","Header","addItem","title","showCompleted","showIncompleted","showAll","placeholder","autofocus","onKeyDown","event","code","target","value","Main","removeItem","toggleCompleteItem","showStatus","type","all","map","item","completed","filter","App","useState","setItems","incompleted","setStatus","itemTitle","updateItems","currentItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.84a3bba2.chunk.js","sourcesContent":["function Footer(props) {\r\n    const items = props.items;\r\n    const clearCompleted = props.clearCompleted;\r\n\r\n    return (\r\n        <footer className=\"footer\">\r\n            <span className=\"todo-count\"><strong>{items.length}</strong> items left</span>\r\n            <button className=\"clear-completed\" onClick={clearCompleted}>Clear completed\r\n        </button>\r\n\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","function Header(props) {\r\n    const addItem = props.addItem;\r\n    const title = props.title;\r\n    const showCompleted = props.showCompleted;\r\n    const showIncompleted = props.showIncompleted;\r\n    const showAll = props.showAll;\r\n\r\n    function handleEnter(event) {\r\n        if (event.code === 'Enter') {\r\n            addItem(event.target.value);\r\n            event.target.value = '';\r\n        }\r\n    }\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <h1>{title}</h1>\r\n            <ul className=\"show-buttons\">\r\n                <li>\r\n                    <button onClick={showCompleted}>Show completed\r\n                </button>\r\n                </li>\r\n                <li>\r\n                    <button onClick={showIncompleted}>Show incompleted\r\n                </button>\r\n                </li>\r\n                <li>\r\n                    <button onClick={showAll}>Show all\r\n                </button>\r\n                </li>\r\n            </ul>\r\n            <input className=\"new-todo\"\r\n                placeholder=\"What needs to be done?\"\r\n                autofocus onKeyDown={handleEnter} />\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","function Main(props) {\r\n    const items = props.items;\r\n    const removeItem = props.removeItem;\r\n    const toggleCompleteItem = props.toggleCompleteItem;\r\n    const showStatus = props.showStatus;\r\n\r\n    function renderCompleted() {\r\n        return (\r\n            <ul className=\"todo-list\">\r\n                {items.filter(item => item.completed).map(item => (\r\n                    <li className={item.completed ? \"completed\" : null}>\r\n                        <div className=\"view\">\r\n                            <input className=\"toggle\"\r\n                                type=\"checkbox\" />\r\n                            <label onClick={() => toggleCompleteItem(item)}>{item.title}</label>\r\n                            <button className=\"destroy\" onClick={() => removeItem(item)} />\r\n                        </div>\r\n                        <input className=\"edit\" />\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    function renderIncompleted() {\r\n        return (\r\n            <ul className=\"todo-list\">\r\n                {items.filter(item => !item.completed).map(item => ( // TODO: FIX!!! \r\n                    <li className={item.completed ? \"completed\" : null}>\r\n                        <div className=\"view\">\r\n                            <input className=\"toggle\"\r\n                                type=\"checkbox\" />\r\n                            <label onClick={() => toggleCompleteItem(item)}>{item.title}</label>\r\n                            <button className=\"destroy\" onClick={() => removeItem(item)} />\r\n                        </div>\r\n                        <input className=\"edit\" />\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    function renderAll() {\r\n        return (\r\n            <ul className=\"todo-list\">\r\n                {items.map(item => (\r\n                    <li className={item.completed ? \"completed\" : null}>\r\n                        <div className=\"view\">\r\n                            <input className=\"toggle\"\r\n                                type=\"checkbox\" />\r\n                            <label onClick={() => toggleCompleteItem(item)}>{item.title}</label>\r\n                            <button className=\"destroy\" onClick={() => removeItem(item)} />\r\n                        </div>\r\n                        <input className=\"edit\" />\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <section className=\"main\">\r\n            <input className=\"toggle-all\"\r\n                type=\"checkbox\" />\r\n            {showStatus.all ? renderAll() : showStatus.completed ? renderCompleted() : renderIncompleted()}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Main;","import './App.css';\nimport { useState } from 'react';\nimport Footer from './Footer';\nimport Header from './Header';\nimport Main from './Main';\n\nfunction App() {\n  const [items, setItems] = useState([]);\n  const [showStatus, setStatus] = useState({ completed: false, incompleted: false, all: true })\n\n  function addNewItem(itemTitle) {\n    setItems([...items, { title: itemTitle, completed: false }]);\n  }\n\n  function removeItem(item) {\n    const updateItems = items.filter(currentItem => item.title !== currentItem.title);\n    setItems(updateItems);\n  }\n\n  function toggleCompleteItem(item) {\n    const updateItems = items.map(currentItem => {\n      if (currentItem.title === item.title)\n        currentItem.completed = !currentItem.completed;\n      return currentItem;\n    });\n    setItems(updateItems);\n  }\n\n  function clearCompleted() {\n    const updateItems = items.filter(currentItem => !currentItem.completed);\n    setItems(updateItems);\n  }\n\n  function showCompleted() {\n    setStatus({ completed: true, incompleted: false, all: false });\n  }\n\n  function showIncompleted() {\n    setStatus({ completed: false, incompleted: true, all: false });\n  }\n\n  function showAll() {\n    setStatus({ completed: false, incompleted: false, all: true });\n  }\n\n  return (\n    <section className=\"todoapp\">\n      <Header title=\"ToDo\" addItem={addNewItem} showCompleted={showCompleted} showIncompleted={showIncompleted} showAll={showAll} />\n      <Main items={items} removeItem={removeItem} toggleCompleteItem={toggleCompleteItem} showStatus={showStatus} />\n      <Footer items={items} clearCompleted={clearCompleted} />\n    </section>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}